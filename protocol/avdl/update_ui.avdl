
@namespace("keybase.1")
protocol updateUi {

  import idl "common.avdl";
  import idl "update_common.avdl";
  import idl "process.avdl";

  enum UpdateAction {
    UPDATE_0,
    SKIP_1,
    SNOOZE_2,
    CANCEL_3
  }

  record UpdatePromptRes {
    UpdateAction action;
    boolean alwaysAutoInstall;
    Time snoozeUntil;
  }

  record UpdatePromptOptions {
    boolean alwaysAutoInstall;
  }

  UpdatePromptRes updatePrompt(int sessionID, Update update, UpdatePromptOptions options);

  enum UpdateAppInUseAction {
    CANCEL_0,
    FORCE_1, // Proceed with update
    SNOOZE_2,
    KILL_PROCESSES_3 // Kill processes and re-check
  }

  record UpdateAppInUseRes {
    UpdateAppInUseAction action;
  }

  UpdateAppInUseRes updateAppInUse(int sessionID, Update update, array<Process> processes);

  record UpdateQuitRes {
    boolean quit; // Whether we app should be killed
    int pid;
    string applicationPath; // So the updater can restart
  }

  UpdateQuitRes updateQuit(int sessionID, Update update, Status status);
}
